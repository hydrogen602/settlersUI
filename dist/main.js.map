{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/canvas.tsx","webpack:///./src/components/canvasCode/graphics/Point.ts","webpack:///./src/components/canvasCode/map/Biome.ts","webpack:///./src/components/canvasCode/map/GameMap.ts","webpack:///./src/components/canvasCode/map/Road.ts","webpack:///./src/components/canvasCode/map/Settlement.ts","webpack:///./src/components/canvasCode/map/Tile.ts","webpack:///./src/components/canvasCode/mechanics/Inventory.ts","webpack:///./src/components/canvasCode/mechanics/Player.ts","webpack:///./src/components/canvasCode/mechanics/Turn.ts","webpack:///./src/components/canvasCode/util.ts","webpack:///./src/components/colorBox.tsx","webpack:///./src/components/game.tsx","webpack:///./src/components/gameOverlays/inventoryDisplay.tsx","webpack:///./src/components/gameOverlays/popup.tsx","webpack:///./src/components/gameOverlays/statusBar.tsx","webpack:///./src/components/login.tsx","webpack:///./src/components/purchaseMenu.tsx","webpack:///./src/components/spinner.tsx","webpack:///./src/components/ui.tsx","webpack:///./src/connection.tsx","webpack:///./src/dataTypes.ts","webpack:///./src/index.tsx","webpack:///./src/jsonParser.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","import * as React from \"react\";\nimport { GameMap } from \"./canvasCode/map/GameMap\";\nimport { RelPoint, Hex } from \"./canvasCode/graphics/Point\";\nimport { Settlement } from \"./canvasCode/map/Settlement\";\nimport { Road } from \"./canvasCode/map/Road\";\n\ninterface IProps {\n    gm: GameMap,\n    onClick: (e: React.MouseEvent) => void,\n    mayPlaceSettlement: boolean,\n    mayPlaceRoad: boolean,\n}\n\ninterface IState {\n    highlightFunc: ((ctx: CanvasRenderingContext2D) => void) | null\n}\n\nexport class Canvas extends React.Component<IProps, IState> {\n\n    private canvasRef: React.RefObject<HTMLCanvasElement>;\n\n    constructor(props: IProps) {\n        super(props);\n        this.canvasRef = React.createRef();\n\n        this.state = {\n            highlightFunc: null\n        }\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) {\n            throw Error(\"this shouldn't happen, canvasRef not set\")\n        }\n\n        this.makeHiDPICanvas(canvas);\n        this.componentDidUpdate();\n    }\n    \n    componentDidUpdate() {\n        //console.log('update');\n        const canvas = this.canvasRef.current;\n        if (!canvas) {\n            throw Error(\"this shouldn't happen, canvasRef not set\")\n        }\n\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            throw Error(\"getContext('2d') failed\");\n        }\n        // implement draw on ctx here\n\n        ctx.fillStyle = '#8395c1'; // background color is set here!\n        ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n\n        this.props.gm.draw(ctx);\n\n        if (this.state.highlightFunc) {\n            this.state.highlightFunc(ctx);\n        }\n        \n\n        // ctx.beginPath();\n        // ctx.arc(this.state.x, this.state.y, 10, 0, 6.28);\n        // ctx.fill();\n    }\n\n\n    // onClick(e: React.MouseEvent) {\n    //     // the on-click\n        \n    //     this.setState({\n    //         x: e.clientX,\n    //         y: e.clientY\n    //     });\n\n    //     console.log(e.clientX, e.clientY);\n    // }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                width={window.innerWidth}\n                height={window.innerHeight}\n                onClick={this.props.onClick}\n                onMouseMove={this.mouseHoverHandler.bind(this)} // this.mouseHoverHandler.bind(this)\n            />\n        )\n    }\n\n    private makeHiDPICanvas(canvas: HTMLCanvasElement) {\n        // https://stackoverflow.com/questions/15661339/how-do-i-fix-blurry-text-in-my-html5-canvas\n        const w = window.innerWidth;\n        const h = window.innerHeight\n    \n        const ctx: CanvasRenderingContext2D = function() {\n            const tmp = canvas.getContext(\"2d\");\n            if (tmp == null) {\n                throw \"CanvasRenderingContext2D is null\";\n            }\n            return tmp;\n        }();\n    \n        const ratio = window.devicePixelRatio || 1;\n    \n        canvas.width = w * ratio;\n        canvas.height = h * ratio;\n        canvas.style.width = w + \"px\";\n        canvas.style.height = h + \"px\";\n        \n        ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n    \n        return canvas;\n    }\n\n    mouseHoverHandler(e: React.MouseEvent) {\n        const p = new RelPoint(e.clientX, e.clientY);\n        const r = Hex.distanceFromNearestHexCorner(p);\n\n        if (this.props.mayPlaceSettlement) {  \n            const h = p.toHexPoint();\n            const back = h.toRelPoint();          \n            \n            if (r < Hex.getSideLength() / 4) {\n                this.setState({\n                    highlightFunc: (ctx) => {\n                        Settlement.stroke(back, ctx);\n                    }\n                });\n            }\n            else {\n                if (this.state.highlightFunc) {\n                    // not yet null, reset to null\n                    this.setState({\n                        highlightFunc: null\n                    });\n                }\n            }\n        }\n        else if (this.props.mayPlaceRoad) {\n            const hArr = p.toDualHexPoint();            \n            if (hArr.length == 2) { // hArr is empty if not over a line\n                const [a, b] = hArr; \n                this.setState({\n                    highlightFunc: (ctx) => {\n                        Road.stroke(a.toRelPoint(), b.toRelPoint(), ctx);\n                    }\n                });\n            }\n            else {\n                if (this.state.highlightFunc) {\n                    // not yet null, reset to null\n                    this.setState({\n                        highlightFunc: null\n                    });\n                }\n            }\n        }\n        else {\n            if (this.state.highlightFunc) {\n                // not yet null, reset to null\n                this.setState({\n                    highlightFunc: null\n                });\n            }\n        }\n    }\n}","import { assert, assertInt, square } from \"../util\";\nimport { JsonParser } from \"../../../jsonParser\";\n\nclass Point {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\n// offset x = 1.5x-0.5\n\nfunction getN() {\n    return 3;\n}\n\n\nexport class Hex {\n\n    private static sectionLength: number = 50\n\n    static getSideLength() {\n        return Hex.sectionLength;\n    }\n\n    //\n    // apothem = s / 2 * tan(180/n)\n    // where n is the number of sides (n=6)\n    //\n    // so apothem = s / 2 * tan(30) = s / (2 * (1 / sqrt(3)))\n    // = s * sqrt(3) / 2\n    //\n    private static apothem: number = Hex.sectionLength * Math.sqrt(3) / 2;\n\n    static getApothem() {\n        return Hex.apothem;\n    }\n\n    private constructor() {}\n\n    static pxUnshiftedToHexGrid(x: number, y: number): HexPoint {\n        const row = Math.round(y / Hex.apothem);\n        \n        // x has to be unshifted\n        const col = x / (Hex.sectionLength * 1.5);\n\n        // col = col - (1/6); // (1/3) * (1/2); offset is 0 or 1/3, so subtract middle and round\n\n        // return new HexPoint(Math.round(col), Math.round(row));\n\n        // new approach -> look for which one is closer\n        const colR = Math.ceil(col);\n        const colL = Math.floor(col);\n\n        const pR = Hex.hexGridToPxUnshifted(row, colR).x;\n        const pL = Hex.hexGridToPxUnshifted(row, colL).x;\n\n        if (Math.abs(x - pR) < Math.abs(x - pL)) {\n            // closer to right point than left\n            return new HexPoint(colR, row);\n        }\n        else {\n            return new HexPoint(colL, row);\n        }\n    }\n\n    static pxUnshiftedToDualHexGrid(x: number, y: number): Array<HexPoint> {\n        const row = Math.round(y / Hex.apothem);\n        \n        // x has to be unshifted\n        const col = x / (Hex.sectionLength * 1.5);\n\n        const colR = Math.ceil(col);\n        const colL = Math.floor(col);\n\n        const rowErr = Math.abs((y / Hex.apothem) % 1);\n        if (rowErr < 0.15 || rowErr > 0.85) {\n            // horizontal mode\n            const p1 = new HexPoint(colL, row);\n            const p2 = new HexPoint(colR, row);\n\n            if (p1.isNeighbor(p2)) {\n                return [p1, p2];\n            }\n            else {\n                return [];\n            }\n        }\n        else if ((col % 1) > 0 && (col % 1) < 1/3) {\n            // check for sloped lines\n            const rowTop = Math.floor(y / Hex.apothem);\n            const rowBottom = Math.ceil(y / Hex.apothem);\n\n            let col = Hex.pxUnshiftedToHexGrid(x, y).x;\n\n            const p1 = new HexPoint(col, rowTop);\n            const p2 = new HexPoint(col, rowBottom);\n\n            if (p1.isNeighbor(p2)) {\n                return [p1, p2];\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    }\n\n    static hexGridToPxUnshifted(row: number, col: number): AbsPoint {\n        //\n        //  /--\\\n        //  \\--/\n        //  \n\n        // let x = col * (Hex.sectionLength + Hex.sectionLength * Math.sin(Math.PI/6));\n        // Math.sin(Math.PI / 6) == 0.5 so...\n        \n        let x = col * Hex.sectionLength * 1.5;\n    \n        if (Math.abs(row % 2) == Math.abs(col % 2)) {\n            x = x + Hex.sectionLength * 0.5; //Math.sin(Math.PI/6);\n        }\n    \n        const y = Hex.apothem * row;\n    \n        return new AbsPoint(x, y);\n    }\n\n    static hexGridToPx(row: number, col: number): RelPoint {    \n        return Hex.hexGridToPxUnshifted(row, col).toRelPoint();\n    }\n\n    static getCenterOfHex(row: number, col: number) {\n        // assuming row, col is top left corner\n        const p = Hex.hexGridToPxUnshifted(row, col);\n        //  /--\\\n        //  \\--/\n        p.x += Hex.sectionLength / 2;\n        p.y += Hex.apothem;\n        return p;\n    }\n\n    static getHexCorners(row: number, col: number): Array<HexPoint> {\n        return [\n            new HexPoint(col, row),\n            new HexPoint(col + 1, row),\n            new HexPoint(col + 1, row + 1),\n            new HexPoint(col + 1, row + 2),\n            new HexPoint(col, row + 2),\n            new HexPoint(col, row + 1)\n        ];\n    }\n\n    static fillHex(row: number, col: number, ctx: CanvasRenderingContext2D) {\n        let p = Hex.hexGridToPx(row, col);\n        \n        ctx.beginPath();\n        ctx.moveTo(p.x, p.y);\n\n        // const ls = this.getHexCorners(row, col);\n        // ls.forEach(p => {\n        //     var tmp = p.toRelPoint();\n        //     ctx.lineTo(tmp.x, tmp.y);\n        // });\n\n        p = Hex.hexGridToPx(row, col + 1);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 1, col + 1);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 2, col + 1);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 2, col);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 1, col);\n        ctx.lineTo(p.x, p.y);        \n    \n        p = Hex.hexGridToPx(row, col);\n        ctx.lineTo(p.x, p.y);\n    \n        ctx.fill()\n    }\n    \n    static strokeHex(row: number, col: number, ctx: CanvasRenderingContext2D) {\n        let p = Hex.hexGridToPx(row, col)\n        ctx.beginPath();\n        ctx.moveTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row, col + 1);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 1, col + 1);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 2, col + 1);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 2, col);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row + 1, col);\n        ctx.lineTo(p.x, p.y);\n    \n        p = Hex.hexGridToPx(row, col);\n        ctx.lineTo(p.x, p.y);\n    \n        ctx.stroke()\n    }\n\n    static distanceFromNearestHexCorner(p: AbsPoint|RelPoint) {\n        const abs = p.toAbsPoint(); // if already absolute, it returns a copy of itself\n        const backConvertedHex = p.toHexPoint().toAbsPoint();\n\n        return Math.sqrt(square(abs.x - backConvertedHex.x) + square(abs.y - backConvertedHex.y));\n    }\n\n}\n\n\n// offset of map on screen in order to move around the map\nexport const currLocation = new Point(\n    window.innerWidth / 2 - Hex.getSideLength() * (1.5 * getN() - 0.5), \n    window.innerHeight / 2 - Hex.getApothem() * getN()); // in px\n\nexport const centerOfScreen = new Point(\n    window.innerWidth / 2 - Hex.getSideLength() * (1.5 * getN() - 0.5), \n    window.innerHeight / 2 - Hex.getApothem() * getN()); // in px\n\nexport const maxDistance = Hex.getSideLength() * (1.5 * getN() - 0.5) * 1.5;\n\n\nexport class HexPoint extends Point {\n    constructor(col: number, row: number) {\n        assertInt(col);\n        assertInt(row);\n        super(col, row);\n    }\n\n    static fromJson(data: object): HexPoint {\n        JsonParser.requireName(data, 'HexPoint');\n\n        const row = JsonParser.requireNumber(data, 'row');\n        const col = JsonParser.requireNumber(data, 'col');\n\n        return new HexPoint(col, row);\n    }\n\n    toJsonSerializable(): object {\n        return {\n            '__name__': 'HexPoint',\n            'row': this.y,\n            'col': this.x\n        }\n    }\n\n    toAbsPoint(): AbsPoint {\n        return Hex.hexGridToPxUnshifted(this.y, this.x);\n    }\n\n    toRelPoint(): RelPoint {\n        return Hex.hexGridToPx(this.y, this.x);\n    }\n\n    isNeighbor(other: HexPoint): boolean {\n        if (other.x == this.x && other.y == this.y + 1) {\n            return true;\n        }\n        if (other.x == this.x && other.y == this.y - 1) {\n            return true;\n        }\n        if (Math.abs(this.x % 2) == Math.abs(this.y % 2)) {\n            // check right\n            if (other.x == this.x + 1 && other.y == this.y) {\n                return true;\n            }\n        }\n        else {\n            // check left\n            if (other.x == this.x - 1 && other.y == this.y) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isEqual(other: HexPoint): boolean {\n        return (other.x == this.x && other.y == this.y);\n    }\n}\n\nexport class AbsPoint extends Point {\n    constructor(x: number, y: number) {\n        super(x, y);\n    }\n\n    toRelPoint(): RelPoint {\n        return new RelPoint(this.x + currLocation.x, this.y + currLocation.y);\n    }\n\n    toAbsPoint(): AbsPoint {\n        return new AbsPoint(this.x, this.y);\n    }\n\n    toHexPoint(): HexPoint {\n        return Hex.pxUnshiftedToHexGrid(this.x, this.y);\n    }\n\n    toDualHexPoint(): Array<HexPoint> {\n        return Hex.pxUnshiftedToDualHexGrid(this.x, this.y);\n    }\n}\n\nexport class RelPoint extends Point {\n    constructor(x: number, y: number) {\n        super(x, y);\n    }\n\n    toRelPoint(): RelPoint {\n        return new RelPoint(this.x, this.y);\n    }\n\n    toAbsPoint(): AbsPoint {\n        return new AbsPoint(this.x - currLocation.x, this.y - currLocation.y);\n    }\n\n    toHexPoint(): HexPoint {\n        const p = this.toAbsPoint();\n        return Hex.pxUnshiftedToHexGrid(p.x, p.y);\n    }\n\n    toDualHexPoint(): Array<HexPoint> {\n        const p = this.toAbsPoint();\n        return Hex.pxUnshiftedToDualHexGrid(p.x, p.y);\n    }\n}\n\n","import { defined } from \"../util\";\n\nexport class Biome {\n    private color: string;\n\n    protected constructor(color: string) {\n        this.color = color;\n    }\n\n    public getColor() {\n        defined(this.color);\n        return this.color;\n    }\n}\n\nexport const Desert = new (class Desert extends Biome {\n    constructor() {\n        super('yellow');\n    }\n})();\n\nexport const Grassland = new (class Grassland extends Biome {\n    constructor() {\n        super('limegreen');\n    }\n})();\n\nexport const Forest = new (class Forest extends Biome {\n    constructor() {\n        super('forestgreen');\n    }\n})();\n\nexport const Mountain = new (class Mountain extends Biome {\n    constructor() {\n        super('dimgray');\n    }\n})();\n\nexport const Farmland = new (class Farmland extends Biome {\n    constructor() {\n        super('goldenrod');\n    }\n})();\n\nexport const Quarry = new (class Quarry extends Biome {\n    constructor() {\n        super('firebrick');\n    }\n})();\n\nexport const biomes: Array<Biome> = [Desert, Grassland, Forest, Mountain, Farmland, Quarry];\n\nexport function getBiomeByName(name: string): Biome {\n    switch (name) {\n        case 'desert':\n            return Desert;\n        case 'grassland':\n            return Grassland;\n        case 'forest':\n            return Forest;\n        case 'mountain':\n            return Mountain;\n        case 'farmland':\n            return Farmland;\n        case 'quarry':\n            return Quarry;\n    \n        default:\n            throw new Error(\"KeyError: Could not find biome named '\" + name + \"'\")\n    }\n}\n\n// export const biomeDistributionArray = function() {\n//     let tmp_biomeDistributionArray: Array<Biome> = [];\n//     biomes.forEach((e: Biome) => {\n//         for (let i = 0; i < e.getAbundance(); i++) {\n//             tmp_biomeDistributionArray.push(e);\n//         }\n//     });\n//     return tmp_biomeDistributionArray;\n// }();\n","import { HexPoint, AbsPoint } from \"../graphics/Point\";\nimport { Tile } from \"./Tile\";\nimport { Settlement } from \"./Settlement\";\nimport { Road } from \"./Road\";\nimport { JsonParser } from \"../../../jsonParser\";\nimport { assertInt } from \"../util\";\n\nexport class GameMap {\n    private tilesArr: Array<Tile>;\n    private settlementsArr: Array<Settlement>;\n    private roadsArr: Array<Road>;\n\n    // offset of map on screen in order to move around the map\n    // currLocation: RelPoint;\n\n    constructor(tilesArr: Array<Tile>, settlementsArr: Array<Settlement>, roadsArr: Array<Road>) {\n        this.tilesArr = tilesArr;\n        this.settlementsArr = settlementsArr;\n        this.roadsArr = roadsArr;\n    }\n\n    static fromJson(data: object): GameMap {\n        JsonParser.requireName(data, 'GameMap');\n\n        let tmp: Array<any> = JsonParser.requireArray(data, 'tiles');\n\n        const tilesArr: Array<Tile> = [];\n        for (const t of tmp) {\n            tilesArr.push(Tile.fromJson(t));\n        }\n\n        tmp = JsonParser.requireArray(data, 'points');\n        \n        const settlementsArr: Array<Settlement> = [];\n        for (const s of tmp) {\n            settlementsArr.push(Settlement.fromJson(s));\n        }\n\n        tmp = JsonParser.requireArray(data, 'lines');\n        const roadsArr: Array<Road> = [];\n        for (const r of tmp) {\n            roadsArr.push(Road.fromJson(r));\n        }\n\n        return new GameMap(tilesArr, settlementsArr, roadsArr);\n    }\n\n    getTiles() {\n        return this.tilesArr;\n    }\n\n    getSettlements() {\n        return this.settlementsArr;\n    }\n\n    getRoads() {\n        return this.roadsArr;\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n\n        this.tilesArr.forEach(e => {\n            e.draw(ctx);\n        });\n\n        this.tilesArr.forEach(e => {\n            e.draw2(ctx);\n        });\n\n        this.roadsArr.forEach(r => {\n            r.draw(ctx);\n        });\n\n        this.settlementsArr.forEach(s => {\n            s.draw(ctx);\n        });\n    }\n\n    dieRolled(value: number) {\n        assertInt(value);\n\n        this.tilesArr.forEach(tile => {\n            tile.activateIfDiceValueMatchesElseDeactivate(value);\n        });\n    }\n}\n","import { HexPoint, RelPoint } from \"../graphics/Point\";\nimport { defined } from \"../util\";\nimport { Player } from \"../mechanics/Player\";\nimport { JsonParser } from \"../../../jsonParser\";\n\nexport class Road {\n    private p1: HexPoint | null;\n    private p2: HexPoint | null;\n    // two endpoints of the line\n\n    private owner: Player;\n\n    constructor(p1: HexPoint | null, p2: HexPoint | null, owner: Player) {\n        this.p1 = p1;\n        this.p2 = p2;\n        this.owner = owner;\n\n        // defined(p1);\n        // defined(p2);\n        defined(owner);\n\n        //this.owner.addRoad(this);\n    }\n\n    isEqual(p1: HexPoint | null, p2: HexPoint | null): boolean {\n        if (!p1 || !p2 || !this.p1 || !this.p2) {\n            return false;\n        }\n\n        if (p1.isEqual(this.p1) && p2.isEqual(this.p2)) {\n            return true;\n        }\n        if (p1.isEqual(this.p2) && p2.isEqual(this.p1)) {\n            return true;\n        }\n        return false;\n    }\n\n    isAdjacent(p: HexPoint | null): boolean {\n        if (!p  || !this.p1 || !this.p2) {\n            return false;\n        }\n\n        if (p.isEqual(this.p1) || p.isEqual(this.p2)) {\n            return true;\n        }\n        return false;\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (!this.p1 || !this.p2) {\n            return;\n        }\n\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 14;\n        ctx.beginPath();\n        const tmp1 = this.p1.toRelPoint();\n        const tmp2 = this.p2.toRelPoint();\n        ctx.moveTo(tmp1.x, tmp1.y);\n        ctx.lineTo(tmp2.x, tmp2.y);\n        ctx.stroke();\n\n        ctx.strokeStyle = this.owner.getColor();\n        ctx.lineWidth = 10;\n        ctx.beginPath();\n        ctx.moveTo(tmp1.x, tmp1.y);\n        ctx.lineTo(tmp2.x, tmp2.y);\n        ctx.stroke();\n    }\n\n    static stroke(tmp1: RelPoint, tmp2: RelPoint, ctx: CanvasRenderingContext2D) {\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 14;\n        ctx.beginPath();\n        ctx.moveTo(tmp1.x, tmp1.y);\n        ctx.lineTo(tmp2.x, tmp2.y);\n        ctx.stroke();\n    }\n\n    static fromJson(data: object): Road {\n        const name = JsonParser.requireName(data, 'Road');\n\n        const owner = Player.fromJson(JsonParser.requireObject(data, 'owner'), true);\n\n        let tmp = JsonParser.requireObject(data, 'point1');\n        const point1 = (tmp) ? HexPoint.fromJson(tmp) : null;\n        \n        tmp = JsonParser.requireObject(data, 'point2');\n        const point2 = (tmp) ? HexPoint.fromJson(tmp) : null;\n\n        if (!owner) {\n            console.error(owner);\n            throw Error('Unknown player');\n        }\n\n        const r = new Road(point1, point2, owner);\n\n        return r;\n    }\n}","import { HexPoint, RelPoint, Hex } from \"../graphics/Point\";\nimport { defined } from \"../util\";\nimport { Player } from \"../mechanics/Player\";\nimport { JsonParser, JsonParserError } from \"../../../jsonParser\";\n\nexport class Settlement {\n    private p: HexPoint | null;\n    private owner: Player;\n\n    private _isCity: boolean = false;\n\n    constructor(location: HexPoint | null, owner: Player) {\n        this.p = location;\n        this.owner = owner;\n        //defined(this.p);\n        defined(this.owner);\n\n        //this.owner.addSettlement(this);\n    }\n\n    getHexPoint() {\n        return this.p;\n    }\n\n    isCity() {\n        return this._isCity;\n    }\n\n    upgrade() {\n        if (this._isCity) {\n            throw \"This already is a city\"\n        }\n        this._isCity = true;\n    }\n\n    isHere(h: HexPoint | null) {\n        if (!this.p || !h) {\n            return false;\n        }\n\n        return h.isEqual(this.p);\n    }\n\n    // production(r: ResourceType) {\n    //     if (this._isCity) {\n    //         this.owner.giveResource(r, 2); // 2 if city\n    //     }\n    //     else {\n    //         this.owner.giveResource(r, 1);\n    //     }\n        \n    // }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (!this.p) {\n            return;\n        }\n        \n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 4;\n        ctx.fillStyle = this.owner.getColor();\n        const relLoc = this.p.toRelPoint();\n\n        // is city\n        if (this._isCity) {\n            const apo = Hex.getSideLength() / 3.5 + 2;\n\n            //      xStep\n            //     |---\n            // apo | /\n            //     |/\n            //\n            // tan(30) = xStep / apo\n\n            const xStep = 0.5773502691896257 * apo; //Math.tan(Math.PI / 6) * apo;\n            ctx.beginPath();\n            ctx.moveTo(relLoc.x + xStep, relLoc.y - apo);\n            ctx.lineTo(relLoc.x + 2 * xStep, relLoc.y);\n            ctx.lineTo(relLoc.x + xStep, relLoc.y + apo);\n            ctx.lineTo(relLoc.x - xStep, relLoc.y + apo);\n            ctx.lineTo(relLoc.x - 2 * xStep, relLoc.y);\n            ctx.lineTo(relLoc.x - xStep, relLoc.y - apo);\n            ctx.closePath();\n\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.moveTo(relLoc.x + xStep, relLoc.y - apo);\n            ctx.lineTo(relLoc.x + 2 * xStep, relLoc.y);\n            ctx.lineTo(relLoc.x + xStep, relLoc.y + apo);\n            ctx.lineTo(relLoc.x - xStep, relLoc.y + apo);\n            ctx.lineTo(relLoc.x - 2 * xStep, relLoc.y);\n            ctx.lineTo(relLoc.x - xStep, relLoc.y - apo);\n            ctx.closePath();\n\n            ctx.stroke();\n        }\n        else {\n            ctx.beginPath();\n        \n            ctx.arc(relLoc.x, relLoc.y, Hex.getSideLength() / 4, 0, 2 * Math.PI);\n            ctx.stroke();\n\n            ctx.beginPath();\n            \n            ctx.arc(relLoc.x, relLoc.y, Hex.getSideLength() / 4 - 2, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n    }\n\n    static stroke(loc: RelPoint, ctx: CanvasRenderingContext2D) {\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.arc(loc.x, loc.y, Hex.getSideLength() / 4, 0, 2 * Math.PI);\n        ctx.stroke();\n    }\n\n    static strokeCity(relLoc: RelPoint, ctx: CanvasRenderingContext2D) {\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 4;\n        const apo = Hex.getSideLength() / 3 + 2;\n        const xStep = Math.tan(Math.PI / 6) * apo;\n\n        ctx.beginPath();\n        ctx.moveTo(relLoc.x + xStep, relLoc.y - apo);\n        ctx.lineTo(relLoc.x + 2 * xStep, relLoc.y);\n        ctx.lineTo(relLoc.x + xStep, relLoc.y + apo);\n        ctx.lineTo(relLoc.x - xStep, relLoc.y + apo);\n        ctx.lineTo(relLoc.x - 2 * xStep, relLoc.y);\n        ctx.lineTo(relLoc.x - xStep, relLoc.y - apo);\n        ctx.closePath();\n\n        ctx.stroke();\n    }\n\n    static fromJson(data: object): Settlement {\n        const name = JsonParser.askName(data);\n        if (name != 'Settlement' && name != 'City') {\n            throw new JsonParserError(`Wrong name, got ${name} instead of Settlement or City`);\n        }\n\n        const owner = Player.fromJson(JsonParser.requireObject(data, 'owner'), true);\n\n        const tmp = JsonParser.requireObject(data, 'position');\n        const position = (tmp) ? HexPoint.fromJson(tmp) : null;\n\n        if (!owner) {\n            console.error(owner);\n            throw Error('Unknown player');\n        }\n\n        const s = new Settlement(position, owner);\n\n        if (name == 'City') {\n            s._isCity = true;\n        }\n\n        return s;\n    }\n}","import { Biome, Desert, getBiomeByName } from \"./Biome\";\nimport { defined, assertInt } from \"../util\";\nimport { HexPoint, AbsPoint, Hex } from \"../graphics/Point\"\nimport { JsonParserError, JsonParser } from \"../../../jsonParser\"\n// import { Settlement } from \"./Settlement\";\n// import { Config } from \"../Config\";\n\nexport class Tile {\n    private p: HexPoint;\n    private landType: Biome;\n    private diceValue: number;\n    private center: AbsPoint;\n\n    private active: boolean = false; // whether this round's die roll matches this tile\n    private isDisabledByRobber: boolean = false;\n\n    constructor(location: HexPoint, landType: Biome, diceValue: number) {\n        this.diceValue = diceValue;\n        this.landType = landType;\n        this.p = location;\n\n        this.center = Hex.getCenterOfHex(location.y, location.x); // flip on purpose\n\n        defined(this.diceValue);\n        defined(this.landType);\n        defined(this.p);\n        defined(this.center);\n    }\n\n    static fromJson(data: object): Tile {\n        JsonParser.requireName(data, 'Tile');\n\n        const diceValue = JsonParser.requireNumber(data, 'diceValue');\n        const location = HexPoint.fromJson(JsonParser.requireObject(data, 'location'));\n        const biome = getBiomeByName(JsonParser.requireString(data, 'biome'));\n\n        return new Tile(location, biome, diceValue);\n    }\n\n    // getDiceValue() {\n    //     return this.diceValue;\n    // }\n\n    // getLandType() {\n    //     return this.landType;\n    // }\n\n    // getPos() {\n    //     return this.p;\n    // }\n\n    // // activate if die matches this tile. Also does production\n    // activateIfDiceValueMatches(value: number, settlements: Array<Settlement>) {\n    //     assertInt(value);\n    //     if (value == this.diceValue && !this.isDisabledByRobber) { // no profits if the robber is around\n    //         this.active = true;\n            \n    //         // find neighboring settlements and award resource\n    //         Hex.getHexCorners(this.p.y, this.p.x).forEach(c => {\n    //             settlements.forEach(s => {\n    //                 if (s.isHere(c)) {\n    //                     s.production(this.landType.getResourceType());\n    //                 }\n    //             })\n    //         })\n            \n    //     }\n    // }\n\n    activateIfDiceValueMatchesElseDeactivate(value: number) {\n        assertInt(value);\n        if (value == this.diceValue && !this.isDisabledByRobber && this.landType != Desert) { // no profits if the robber is around\n            this.active = true;\n        }\n        else {\n            this.active = false;\n        }\n    }\n\n    highlightIfActive(ctx: CanvasRenderingContext2D) {\n        if (this.active && !this.isDisabledByRobber) {\n            ctx.strokeStyle = \"white\";\n            ctx.lineWidth = 4;\n            Hex.strokeHex(this.p.y, this.p.x, ctx);\n        }\n    }\n\n    // arriveRobber() {\n    //     this.isDisabledByRobber = true;\n    // }\n\n    // departRobber() {\n    //     this.isDisabledByRobber = false;\n    // }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = this.landType.getColor();\n\n        Hex.fillHex(this.p.y, this.p.x, ctx);\n\n        const relCenter = this.center.toRelPoint();\n\n        if (this.landType != Desert) {\n            ctx.font = \"20px Arial\";\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillStyle = \"black\";\n            ctx.fillText(this.diceValue.toString(), relCenter.x, relCenter.y);\n        }\n        \n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n\n        Hex.strokeHex(this.p.y, this.p.x, ctx);\n    }\n\n    /**\n     * Call this function after draw() has\n     * been called on all tiles\n     * \n     * @param ctx CanvasRenderingContext2D\n     */\n    draw2(ctx: CanvasRenderingContext2D) {\n        if (this.isDisabledByRobber) {\n            this.strokeRobber(ctx);\n        }\n\n        this.highlightIfActive(ctx);\n    }\n\n    strokeRobber(ctx: CanvasRenderingContext2D) {\n        const relCenter = this.center.toRelPoint();\n\n        const apo = Hex.getSideLength() / 3.5 + 2;\n        const xStep = 0.5773502691896257 * apo; // Math.tan(Math.PI / 6) * apo;\n\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 5;\n\n        ctx.beginPath();\n        ctx.moveTo(relCenter.x + xStep, relCenter.y - apo);\n        ctx.lineTo(relCenter.x + 2 * xStep, relCenter.y);\n        ctx.lineTo(relCenter.x + xStep, relCenter.y + apo);\n        ctx.lineTo(relCenter.x - xStep, relCenter.y + apo);\n        ctx.lineTo(relCenter.x - 2 * xStep, relCenter.y);\n        ctx.lineTo(relCenter.x - xStep, relCenter.y - apo);\n        ctx.closePath();\n\n        ctx.stroke();\n    }\n\n    // this method is from http://www.playchilla.com/how-to-check-if-a-point-is-inside-a-hexagon\n    isInside(pos: AbsPoint): boolean\n    {\n        // vertical = apothem\n        const q2x: number = Math.abs(pos.x - this.center.x);\n        const q2y: number = Math.abs(pos.y - this.center.y);\n\n        const vert = Hex.getApothem();\n        const hori = Hex.getSideLength() / 2;\n\n        if (q2x > hori*2 || q2y > vert) return false;\n        return vert * 2 * hori - vert * q2x - 2* hori * q2y >= 0;\n    }\n}\n","//import { ResourceType } from \"./dataTypes\";\nimport { defined, assertInt, assert } from \"../util\";\nimport { JsonParser, JsonParserError } from \"../../../jsonParser\";\nimport { Settlement } from \"../map/Settlement\";\nimport { Road } from \"../map/Road\";\n\n// my own inventory system cause map is limited\n\n// requirements - map based/ like\n// get - set - update\n// verify enough resources\n\nexport class Inventory {\n    \n    private content: Map<string, number>;\n    private pointFeatures: Array<Settlement>;\n    private lineFeatures: Array<Road>;\n\n    // private static conversionMap = new Map([\n    //     ['Wheat', ResourceType.Wheat],\n    //     ['Sheepie', ResourceType.Sheep],\n    //     ['Lumber', ResourceType.Lumber],\n    //     ['Ore', ResourceType.Ore],\n    //     ['Brick', ResourceType.Brick],\n    //     ['NoResource', ResourceType.NoResource]\n    // ])\n\n    constructor() {\n        this.content = new Map();\n\n        this.pointFeatures = [];\n        this.lineFeatures = [];\n    }\n\n    keys() {\n        return this.content.keys();\n    }\n\n    get(k: string): number {\n        const tmp = this.content.get(k);\n        defined(tmp);\n        return <number>tmp;\n    }\n\n    getPointFeatures(): Array<Settlement> {\n        return this.pointFeatures.slice();\n    }\n\n    getLineFeatures(): Array<Road> {\n        return this.lineFeatures.slice();\n    }\n\n    static fromJson(data: object): Inventory {\n        const name = JsonParser.askName(data);\n        if (name != 'ExpandedInventory' && name != 'Inventory') {\n            throw new JsonParserError(`Wrong name, got ${name} instead of ExpandedInventory or Inventory`);\n        }\n\n        const inv = new Inventory();\n\n        const invData = JsonParser.requireObject(data, 'inventory');\n\n        for (const resourceName in invData) {\n            const count = JsonParser.requireNumber(invData, resourceName);\n            assertInt(count);\n            inv.content.set(resourceName, count);\n        }\n\n        if (name == 'ExpandedInventory') {\n            const settlementArr = JsonParser.requireArray(data, 'pointFeatures');\n            for (const it of settlementArr) {\n                inv.pointFeatures.push(Settlement.fromJson(it));\n            }\n\n            const roadArr = JsonParser.requireArray(data, 'lineFeatures');\n            for (const it of roadArr) {\n                inv.lineFeatures.push(Road.fromJson(it));\n            }\n        }\n\n        return inv;\n    }\n}\n","import { defined, assertInt } from \"../util\";\n//import { Settlement } from \"../map/Settlement\";\n//import { Road } from \"../map/Road\";\n//import { RelPoint } from \"../graphics/Point\";\n//import { Inventory } from \"./Inventory\";\nimport { JsonParser } from \"../../../jsonParser\";\n\nexport class Player {\n    private color: string;\n    //private settlements: Array<Settlement> = [];\n    //private roads: Array<Road> = [];\n    private name: string;\n    private token: string;\n    //private inventory: Inventory;\n\n    private static playerDict: { [token: string]: Player} = {};\n\n    constructor(color: string, name: string, token: string) {\n        this.color = color;\n        this.name = name;\n        this.token = token;\n        //this.settlements = [];\n        defined(color);\n        defined(name);\n        defined(token);\n\n        //this.inventory = new Inventory();\n\n        Player.playerDict[token] = this;\n    }\n\n    static doesPlayerExists(data: object): boolean {\n        JsonParser.requireName(data, 'Player');\n        const token = JsonParser.requireString(data, 'token');\n\n        return token in Player.playerDict;\n    }\n\n    static fromJson(data: object, returnNullOnMissingPlayer?: boolean): Player | null {\n\n        JsonParser.requireName(data, 'Player');\n        const token = JsonParser.requireString(data, 'token');\n\n        if (token in Player.playerDict) {\n            // player already exists\n            return Player.playerDict[token];\n        }\n\n        if (returnNullOnMissingPlayer) {\n            return null;\n        }\n\n        return new Player(\n            JsonParser.requireString(data, 'color'),\n            JsonParser.requireString(data, 'name'),\n            token\n        )\n    }\n\n    static getPlayerDict() {\n        return Player.playerDict;\n    }\n\n    // getRoads() {\n    //     return this.roads;\n    // }\n\n    // getSettlements() {\n    //     return this.settlements;\n    // }\n\n    getColor() {\n        return this.color;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getToken() {\n        return this.token;\n    }\n\n    draw() {\n        //this.invBoard.draw();\n    }\n\n    debug() {\n        console.log(this)\n        // this.settlements.forEach(e => {\n        //     console.log(\"  \", e)\n        // });\n        //console.log(\"  Inv:\", this.inventory);\n    }\n\n\n}","import { defined, assertInt } from \"../util\";\nimport { JsonParser } from \"../../../jsonParser\";\nimport { Player } from \"./Player\";\n\nexport class Turn {\n\n    public roundNum: number;\n    public currentPlayer: Player;\n    public dieValue: number | null;\n\n    constructor(roundNum: number, currentPlayer: Player, dieValue: number | null) {\n        this.roundNum = roundNum;\n        this.currentPlayer = currentPlayer;\n        this.dieValue = dieValue;\n\n        defined(this.roundNum);\n        defined(this.currentPlayer);\n        //defined(this.dieValue); may be null\n\n        assertInt(this.roundNum);\n        if (this.dieValue) {\n            assertInt(this.dieValue);\n        }\n    }\n\n    static fromJson(obj: object): Turn {\n        const playerTag = JsonParser.requireObject(obj, 'currentPlayer');\n\n        const player = Player.fromJson(playerTag, true);\n\n        const dieVal = (JsonParser.requireAny(obj, 'dieValue')) ? JsonParser.requireNumber(obj, 'dieValue') : null;\n\n        if (player) {\n            return new Turn(\n                JsonParser.requireNumber(obj, 'roundNum'),\n                player,\n                dieVal\n            );\n        }\n        else {\n            console.error(playerTag);\n            throw Error('Unknown player!');\n        }\n    }\n}","\nclass AssertionError extends Error {\n\n}\n\nexport function assert(condition: boolean, message?: string) {\n    if (!condition) {\n        throw new AssertionError(message || \"Assertion failed\");\n    }\n}\n\nexport function defined(condition: any) {\n    if (condition == undefined) {\n        throw new AssertionError(\"Variable undefined\");\n    }\n}\n\nexport function square(n: number) {\n    return n * n\n}\n\nexport function assertInt(n: number) {\n    if (!Number.isInteger(n)) {\n        throw new AssertionError(\"TypeError: expected int\");\n    }\n}\n\nexport function randomInt(high: number, low?: number) {\n    if (low == undefined) {\n        low = 0;\n    }\n    assertInt(high);\n    assertInt(low);\n    return Math.floor(Math.random() * (high - low) + low);\n}\n\nexport function rollTwoDice() {\n    return randomInt(7, 1) + randomInt(7, 1) // high limit (7) is excluded\n}\n\n/**\n * Randomly shuffle an array\n * https://stackoverflow.com/a/2450976/1293256\n */\nexport function shuffle(array: Array<any>) {\n\tvar currentIndex = array.length;\n\tvar temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n};\n","import * as React from \"react\";\n\nconst colors: Map<string, Array<string>> = new Map([\n    ['red', [\n        \"lightsalmon\",\n        \"salmon\",\n        \"darksalmon\",\n        \"lightcoral\",\n        \"indianred\",\n        \"crimson\",\n        \"firebrick\",\n        \"red\",\n        \"darkred\"\n    ]],\n    ['orange', [\n        \"coral\",\n        \"tomato\",\n        \"orangered\",\n        \"gold\",\n        \"orange\",\n        \"darkorange\"\n    ]],\n    ['yellow', [\n        \"lightyellow\",\n        \"lemonchiffon\",\n        \"lightgoldenrodyellow\",\n        \"papayawhip\",\n        \"moccasin\",\n        \"peachpuff\",\n        \"palegoldenrod\",\n        \"khaki\",\n        \"darkkhaki\",\n        \"yellow\"\n    ]],\n    ['green', [\n        \"lawngreen\",\n        \"chartreuse\",\n        \"limegreen\",\n        \"lime\",\n        \"forestgreen\",\n        \"green\",\n        \"darkgreen\",\n        \"greenyellow\",\n        \"yellowgreen\",\n        \"springgreen\",\n        \"mediumspringgreen\",\n        \"lightgreen\",\n        \"palegreen\",\n        \"darkseagreen\",\n        \"mediumseagreen\",\n        \"seagreen\",\n        \"olive\",\n        \"darkolivegreen\",\n        \"olivedrab\"\n    ]],\n    ['cyan', [\n        \"lightcyan\",\n        \"cyan\",\n        \"aqua\",\n        \"aquamarine\",\n        \"mediumaquamarine\",\n        \"paleturquoise\",\n        \"turquoise\",\n        \"mediumturquoise\",\n        \"darkturquoise\",\n        \"lightseagreen\",\n        \"cadetblue\",\n        \"darkcyan\",\n        \"teal\"\n    ]],\n    ['blue', [\n        \"powderblue\",\n        \"lightblue\",\n        \"lightskyblue\",\n        \"skyblue\",\n        \"deepskyblue\",\n        \"lightsteelblue\",\n        \"dodgerblue\",\n        \"cornflowerblue\",\n        \"steelblue\",\n        \"royalblue\",\n        \"blue\",\n        \"mediumblue\",\n        \"darkblue\",\n        \"navy\",\n        \"midnightblue\",\n        \"mediumslateblue\",\n        \"slateblue\",\n        \"darkslateblue\"\n    ]],\n    ['purple', [\n        \"lavender\",\n        \"thistle\",\n        \"plum\",\n        \"violet\",\n        \"orchid\",\n        \"fuchsia\",\n        \"magenta\",\n        \"mediumorchid\",\n        \"mediumpurple\",\n        \"blueviolet\",\n        \"darkviolet\",\n        \"darkorchid\",\n        \"darkmagenta\",\n        \"purple\",\n        \"indigo\"\n    ]],\n    ['pink', [\n        \"pink\",\n        \"lightpink\",\n        \"hotpink\",\n        \"deeppink\",\n        \"palevioletred\",\n        \"mediumvioletred\"\n    ]],\n    ['white', [\n        \"white\",\n        \"snow\",\n        \"honeydew\",\n        \"mintcream\",\n        \"azure\",\n        \"aliceblue\",\n        \"ghostwhite\",\n        \"whitesmoke\",\n        \"seashell\",\n        \"beige\",\n        \"oldlace\",\n        \"floralwhite\",\n        \"ivory\",\n        \"antiquewhite\",\n        \"linen\",\n        \"lavenderblush\",\n        \"mistyrose\"\n    ]],\n    ['gray', [\n        \"gainsboro\",\n        \"lightgray\",\n        \"silver\",\n        \"darkgray\",\n        \"gray\",\n        \"dimgray\",\n        \"lightslategray\",\n        \"slategray\",\n        \"darkslategray\",\n        \"black\"\n    ]],\n    ['brown', [\n        \"cornsilk\",\n        \"blanchedalmond\",\n        \"bisque\",\n        \"navajowhite\",\n        \"wheat\",\n        \"burlywood\",\n        \"tan\",\n        \"rosybrown\",\n        \"sandybrown\",\n        \"goldenrod\",\n        \"peru\",\n        \"chocolate\",\n        \"saddlebrown\",\n        \"sienna\",\n        \"brown\",\n        \"maroon\"\n    ]]\n]);\n\ninterface IProps {\n    onClick: (color: string, ev: React.MouseEvent) => void\n}\n\nexport function ColorBox(props: IProps) {\n\n    const items: Array<JSX.Element> = [];\n\n    for (const [familyName, familyColors] of colors.entries()) {\n        const len = items.length;\n        items.push(\n        <div style={{display: 'block', width: '30%'}} key={len}>\n            <h3>{familyName}</h3>\n            <div className=\"colorBoxSubBox\">\n                {familyColors.map((value, index) => {\n                    return <button key={index} onClick={(ev) => props.onClick(value, ev)} style={{backgroundColor: value}}></button>\n                })}\n            </div>\n        </div>\n        );\n    }\n\n    return (\n        <div className=\"window colorBox center\">\n            <div className=\"colorBoxCollection\">\n                {items}\n            </div>\n        </div>\n    );\n}","import * as React from \"react\";\nimport { Connection } from \"../connection\";\nimport { Canvas } from \"./canvas\"\nimport { GameMap } from \"./canvasCode/map/GameMap\";\nimport { JsonParser } from \"../jsonParser\";\nimport { StatusBar, PlayerList } from \"./gameOverlays/statusBar\";\nimport { Player } from \"./canvasCode/mechanics/Player\";\nimport { Turn } from \"./canvasCode/mechanics/Turn\";\nimport { Popup } from \"./gameOverlays/popup\";\nimport { RelPoint, AbsPoint, HexPoint, Hex } from \"./canvasCode/graphics/Point\";\nimport { Inventory } from \"./canvasCode/mechanics/Inventory\";\nimport { InventoryDisplay } from \"./gameOverlays/inventoryDisplay\";\n\ninterface IProps {\n    conn: Connection\n}\n\ninterface IState {\n    gm: GameMap,\n    gameStarted: boolean,\n    currNotification: string | null,\n    currError: string | null,\n    playerList: Array<string>,\n    currentTurn: Turn | null,\n    inventory: Inventory | null,\n\n    selectedLinePurchased: number | null,\n    selectedPointPurchased: number | null,\n}\n\nexport class Game extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        props.conn.setJsonMessageHandler(this.onMessage.bind(this));\n\n        this.state = {\n            gm: new GameMap([], [], []),\n            gameStarted: false,\n            currNotification: null,\n            currError: null,\n            playerList: [],\n            currentTurn: null,\n            inventory: null,\n\n            selectedLinePurchased: null,\n            selectedPointPurchased: null,\n        }\n    }\n\n    private onMessage(obj: object) {\n        //console.log(obj);\n        if (JsonParser.askName(obj) == 'Game') {\n            this.props.conn.sendMessage('update', 'inventory', []);\n\n            const gameMapJson = JsonParser.requireObject(obj, 'gameMap');\n\n            const gameMap = GameMap.fromJson(gameMapJson);\n\n            const gameStarted = JsonParser.requireBool(obj, 'gameStarted');\n\n            const playerList = this.state.playerList;\n\n            const players = JsonParser.requireArray(obj, 'players');\n            for (const p of players) {\n                if (!Player.doesPlayerExists(p)) {\n                    const x = Player.fromJson(p);\n                    if (!x) {\n                        throw Error('This should not happen');\n                    }\n                    playerList.push(x.getName());\n                }\n            }\n\n            this.setState({\n                gm: gameMap,\n                gameStarted: gameStarted,\n                playerList: playerList\n            });\n        }\n\n        else if (JsonParser.askName(obj) == 'Turn') {\n            // should only be received on a new turn\n            const turn = Turn.fromJson(obj);\n\n            this.setState({\n                currentTurn: turn,\n                currNotification: `${turn.currentPlayer.getName()}'s turn`\n            });\n\n            if (turn.dieValue) {\n                this.state.gm.dieRolled(turn.dieValue);\n            }\n\n            console.log(turn);\n        }\n\n        else if (JsonParser.askName(obj) == 'Inventory' || JsonParser.askName(obj) == 'ExpandedInventory') {\n            this.setState({ 'inventory': Inventory.fromJson(obj) });\n        }\n\n        else if (JsonParser.askType(obj) == \"notification\") {\n            const msg = JsonParser.requireString(obj, 'content');\n\n            this.setState({\n                currNotification: msg\n            });\n\n            setTimeout(() => {\n                if (this.state.currNotification == msg) {\n                    this.setState({ currNotification: null });\n                }\n            }, 10000);\n        }\n\n        else if (JsonParser.askType(obj) == \"error\") {\n            const errMsg = JsonParser.requireString(obj, 'content');\n\n            this.setState({\n                currError: errMsg\n            });\n        }\n    }\n\n    mouseHandler(e: React.MouseEvent) {\n        const p = new RelPoint(e.clientX, e.clientY);\n        const r = Hex.distanceFromNearestHexCorner(p);\n\n        if (this.state.selectedPointPurchased != null) {            \n            \n            if (r < Hex.getSideLength() / 4) {\n                // clicked on a corner\n                const h = p.toHexPoint();\n                console.log(\"new settlement\");\n                this.props.conn.send({'type': 'action', 'content': 'placeSettlement', 'args': [h.toJsonSerializable(), this.state.selectedPointPurchased]})\n                \n                this.setState({\n                    selectedPointPurchased: null\n                });\n            }\n        }\n        else if (this.state.selectedLinePurchased != null) {\n            const hArr = p.toDualHexPoint();            \n            if (hArr.length == 2) { // hArr is empty if not over a line \n                const [a, b] = hArr;\n                console.log(\"new road\");\n                this.props.conn.send({'type': 'action', 'content': 'placeRoad', 'args': [a.toJsonSerializable(), b.toJsonSerializable(), this.state.selectedLinePurchased]})\n            \n                this.setState({\n                    selectedLinePurchased: null\n                });\n            }\n        }\n    }\n\n    private onClickPurchasedPoint(index: number, ev: React.MouseEvent) {\n        this.setState({\n            selectedLinePurchased: null,\n            selectedPointPurchased: index\n        })\n    }\n\n    private onClickPurchasedLine(index: number, ev: React.MouseEvent) {\n        this.setState({\n            selectedLinePurchased: index,\n            selectedPointPurchased: null\n        })\n    }\n\n    render() {\n        const defaultMsg = this.state.gameStarted ? \"Game running\" : \"Game hasn't started yet\"\n        const msg = this.state.currNotification == null ? defaultMsg : this.state.currNotification\n        return (\n            <div>\n                {(this.state.currError) ? <Popup msg={this.state.currError} callBack={() => {this.setState({ currError: null })}}/> : null}\n                <StatusBar msg={msg}>\n                    {(this.state.gameStarted) ? null : <button className=\"button\" onClick={() => {this.props.conn.send({'debug': 'startGame'})}}>Start Game</button>}\n                    {(this.state.currentTurn && this.state.currentTurn.currentPlayer.getName() == this.props.conn.getName()) ? <button className=\"button\" onClick={() => {this.props.conn.send({'type': 'action', 'content': 'nextTurn'})}}>End Turn</button> : null}\n                    {(this.state.currentTurn && this.state.currentTurn.dieValue) ? <p>{`Die Roll: ${this.state.currentTurn.dieValue}`}</p> : null}\n                </StatusBar>\n\n                <InventoryDisplay\n                    inv={this.state.inventory}\n                    onClickPurchasedLine={this.onClickPurchasedLine.bind(this)}\n                    onClickPurchasedPoint={this.onClickPurchasedPoint.bind(this)}\n                    sendMessage={this.props.conn.sendMessage}\n                    hasGameStarted={this.state.gameStarted}\n                />\n\n                <PlayerList names={this.state.playerList} currentPlayer={(this.state.currentTurn) ? this.state.currentTurn.currentPlayer.getName() : null}/>\n                <Canvas\n                    gm={this.state.gm} onClick={this.mouseHandler.bind(this)}\n                    mayPlaceRoad={this.state.selectedLinePurchased != null}\n                    mayPlaceSettlement={this.state.selectedPointPurchased != null}\n                />\n            </div>\n        )\n    }\n}  ","import * as React from \"react\";\nimport { Inventory } from \"../canvasCode/mechanics/Inventory\";\nimport { PurchaseMenu } from \"../purchaseMenu\";\n\ninterface IProps {\n    inv: Inventory | null,\n    onClickPurchasedPoint: (index: number, ev: React.MouseEvent) => void,\n    onClickPurchasedLine: (index: number, ev: React.MouseEvent) => void,\n    sendMessage: (type: string, content: string, args?: Array<any>) => void,\n    hasGameStarted: boolean\n}\n\nexport function InventoryDisplay(props: IProps) {\n    if (!props.inv || !props.hasGameStarted) {\n        return <div className=\"window inventory\">Inventory</div>\n    }\n\n    const [isPurchaseMenuShown, setPurchaseMenuVisibility] = React.useState(false);\n\n    const tmp: Array<string> = [];\n\n    for (const resourceName of props.inv.keys()) {\n        if (resourceName == 'NoResource') {\n            continue;\n        }\n        tmp.push(`${resourceName}: ${props.inv.get(resourceName)}`);\n    }\n\n    const anyPurchased = props.inv.getLineFeatures().length > 0 || props.inv.getPointFeatures().length > 0;\n\n    return (\n        <div>\n            <div className=\"window inventory\">\n                <button onClick={() => setPurchaseMenuVisibility(true)} className=\"button\">Purchase Menu</button>\n                <span>{tmp.join('; ')}</span>\n            </div>\n            { anyPurchased ? <div className=\"window inventory2\">\n                <h3>Purchased:</h3>\n                <div style={{display: 'flex', flexWrap: 'wrap', marginBottom: '0.5em'}}>\n                    {props.inv.getPointFeatures().map((value, index) => {\n                        return (\n                        <button key={index} onClick={(ev) => props.onClickPurchasedPoint(index, ev)}>\n                            {value.isCity() ? <i className=\"fas fa-city\"></i> : <i className=\"fas fa-home\"></i>}\n                        </button>\n                        );\n                    })}\n                </div>\n                <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {props.inv.getLineFeatures().map((value, index) => {\n                        return (\n                        <button key={index} onClick={(ev) => props.onClickPurchasedLine(index, ev)}>\n                            <i className=\"fas fa-road\"></i>\n                        </button>\n                        );\n                    })}\n                </div>\n            </div> : null }\n\n            { isPurchaseMenuShown ? <PurchaseMenu \n                cancelFunc={() => setPurchaseMenuVisibility(false)}\n                sendMessage={props.sendMessage}\n            /> : null}\n        </div>\n    );\n}\n","import * as React from \"react\";\n\ninterface IProps {\n    msg: string,\n    callBack: () => void\n}\n\n\nexport function Popup(props: IProps) {\n    return (\n        <div className=\"popup center window\">\n            <p>{props.msg}</p>\n            <button className=\"button\" onClick={props.callBack}>OK</button>\n        </div>\n    );\n}\n","import * as React from \"react\";\n\ninterface IProps {\n    msg: string,\n    children: React.ReactNode\n}\n\n// {(props.isTurn) ? <button className=\"button\" onClick={props.onClick}>Start Game</button> : null}\n\n\nexport function StatusBar(props: IProps) {\n    return (\n        <div className=\"window statusBar\" style={{textAlign: 'center'}}>\n            {props.children}\n            <div>{props.msg}</div>\n        </div>\n    );\n}\n\ninterface IProps2 {\n    names: Array<string>,\n    currentPlayer: string | null\n}\n\nexport function PlayerList(props: IProps2) {\n    return (\n        <div className=\"window playerList\">\n            <h3>Players:</h3>\n            {props.names.map((value, index) => {\n                if (value == props.currentPlayer) {\n                    return <p key={index}><i className=\"fas fa-arrow-alt-circle-right\"></i> {value}</p>\n                }\n                else {\n                    return <p key={index}>{value}</p>\n                }\n                \n            })}\n        </div>\n    )\n}","import * as React from \"react\";\nimport { ConnectionData } from \"../dataTypes\";\nimport { ColorBox } from \"./colorBox\";\n\ninterface IState {\n    name: string,\n    host: string,\n    port: string,\n    color: string,\n    pickingColor: boolean;\n}\n\ninterface IProp {\n    callback: (data: ConnectionData) => void\n}\n\nexport class LoginForm extends React.Component<IProp, IState> {\n    constructor(props: IProp) {\n        super(props);\n\n        let name = '';\n        let host = '';\n        let port = '';\n        let color = '';\n\n        const oldData = localStorage.getItem('login');\n        if (oldData) {\n            const oldState = JSON.parse(oldData);\n            if (oldState['name']) { name = oldState['name']; }\n            if (oldState['host']) { host = oldState['host']; }\n            if (oldState['port']) { port = oldState['port']; }\n            if (oldState['color']) { color = oldState['color']; }\n\n        }\n\n        this.state = {\n            name: name,\n            host: host,\n            port: port,\n            color: color,\n            pickingColor: false\n        }\n\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    onColorClick(color: string, ev: React.MouseEvent) {\n        this.setState({\n            color: color,\n            pickingColor: false\n        });\n    }\n\n    handleChange(event: React.FormEvent<HTMLInputElement>) {\n        if (event.currentTarget.name == \"name\") {\n            this.setState({ name: event.currentTarget.value });\n        }\n        else if (event.currentTarget.name == \"host\") {\n            this.setState({ host: event.currentTarget.value });\n        }\n        else if (event.currentTarget.name == \"port\") {\n            this.setState({ port: event.currentTarget.value });\n        }\n    }\n\n    handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n        const port = parseInt(this.state.port);\n        if (this.state.name != '' && this.state.host != '' && port.toString() != \"NaN\" && port > 0 && this.state.color != '') {\n            console.log(\"yeet\", this.state);\n\n            localStorage.setItem('login', JSON.stringify(this.state))\n\n            this.props.callback({\n                name: this.state.name,\n                host: this.state.host,\n                port: port,\n                color: this.state.color,\n                token: null\n            });\n        }\n\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <form id=\"loginForm\" className=\"center window\" onSubmit={this.handleSubmit}>\n                    <input required name=\"name\" type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange}></input>\n                    <input required name=\"host\" type=\"text\" placeholder=\"Hostname\" value={this.state.host} onChange={this.handleChange}></input>\n                    <input required name=\"port\" type=\"number\" placeholder=\"Port\" value={this.state.port} onChange={this.handleChange}></input>\n                    \n                    <input required readOnly name=\"color\" type=\"string\" placeholder=\"Color\" value={this.state.color} onFocus={() => {this.setState({ pickingColor: true })}}></input>\n\n                    <button className=\"button\">Join Game</button>\n                </form>\n                {(this.state.pickingColor) ? <ColorBox onClick={this.onColorClick.bind(this)}/> : null }\n            </div>\n        )\n    }\n}","import * as React from \"react\";\n\ninterface IProps {\n    cancelFunc: () => void,\n    sendMessage: (type: string, content: string, args?: Array<any>) => void,\n};\n\nexport function PurchaseMenu(props: IProps) {\n\n    const [hasBoughtStuff, setHasBoughtStuff] = React.useState(false);\n\n    function purchase(content: string) {\n        props.sendMessage(\"purchase\", content);\n        setHasBoughtStuff(true);\n    }\n\n    return (\n        <div className=\"window purchaseMenu center\">\n            <h3>Purchase Menu</h3>\n            <table>\n                <tbody>\n                    <tr onClick={() => purchase('road')}>\n                        <td>Road</td>\n                        <td>Lumber:&nbsp;1, Brick:&nbsp;1</td>\n                    </tr>\n                    <tr onClick={() => purchase('settlement')}>\n                        <td>Settlement</td>\n                        <td>Wheat:&nbsp;1, Sheepie:&nbsp;1, Lumber:&nbsp;1, Brick:&nbsp;1</td>\n                    </tr>\n                    <tr onClick={() => purchase('city')}>\n                        <td>City</td>\n                        <td>Wheat:&nbsp;2, Ore:&nbsp;3</td>\n                    </tr>\n                </tbody>\n            </table>\n            <button className=\"button\" onClick={props.cancelFunc}>{hasBoughtStuff ? \"Done\" : \"Cancel\" }</button>\n        </div>\n    );\n}","import * as React from \"react\";\n\ninterface IProps {\n    shown: boolean\n}\n\n\nexport function Spinner(props: IProps) {\n    if (props.shown) {\n        return <div className={'loader'}></div>;\n    }\n    else {\n        return <div className={'loader'} style={{opacity: 0}}></div>;\n    }\n}\n","import * as React from \"react\";\n\nimport { LoginForm } from \"./login\";\nimport { Spinner } from \"./spinner\";\n\nimport { Connection } from \"../connection\";\nimport { Game } from \"./game\";\nimport { ColorBox } from \"./colorBox\";\nimport { ConnectionData } from \"../dataTypes\";\n\nconst atLogin = 0\nconst atConnecting = 1\nconst atGame = 2\n\ninterface IState {\n    progressState: number,\n    failedConn: boolean,\n    dat: ConnectionData | null,\n    conn: Connection | null\n}\n\nexport class UI extends React.Component<{}, IState> {\n    \n    constructor(props: {}) {\n        super(props);\n\n        const maybe = Connection.regainOldConnectionIfExists(this.onWebSockFailure.bind(this), this.onWebSockOpen.bind(this));\n        if (maybe) {\n            console.log('regained old connection');\n        }\n        else {\n            console.log('no old connection found');\n        }\n        \n        this.state = {\n            progressState: (maybe) ? atConnecting : atLogin,\n            failedConn: false,\n            dat: null,\n            conn: (maybe) ? maybe : null,\n        };\n\n        this.loginSubmitCallback = this.loginSubmitCallback.bind(this);\n    }\n\n    loginSubmitCallback(data: ConnectionData) {\n        this.setState({\n            dat: data,\n            progressState: atConnecting,\n            failedConn: false,\n            conn: new Connection(data, this.onWebSockFailure.bind(this), this.onWebSockOpen.bind(this))\n        });\n    }\n\n    private onWebSockFailure(ev: Event) {\n        console.log(\"back to login\")\n        this.setState({\n            progressState: atLogin,\n            failedConn: true\n        })\n    }\n\n    private onWebSockOpen(ev: Event) {\n        this.setState({\n            progressState: atGame,\n            failedConn: false\n        })\n    }\n\n    render() {\n        if (this.state.progressState == atLogin) {\n            if (this.state.failedConn) {\n                return (\n                    <div>\n                        <LoginForm callback={this.loginSubmitCallback} />\n                        <img id=\"whoopsie\" src=\"whoopsie-01.png\" alt=\"whoopsie\"></img>\n                    </div>\n                    );\n            }\n            else {\n                return (\n                    <div>\n                        <LoginForm callback={this.loginSubmitCallback} />\n                    </div>\n                );\n            }\n            \n        }\n        else if (this.state.progressState == atConnecting) {\n            return (\n                <div className=\"window center\" style={{width: \"6em\"}}>\n                    <p style={{margin: 'auto', paddingBottom: '0.5em', color: 'white'}}>Connecting...</p>\n                    <Spinner shown={true}/>\n                </div>\n                );\n        }\n        else if (this.state.progressState == atGame) {\n            if (!this.state.conn) {\n                throw Error(\"this shouldn't happen\");\n            }\n            return (\n                <Game conn={this.state.conn}/>\n            )\n        }\n        else {\n            return <p>Hi, {(this.state.dat) ? this.state.dat.name : null}</p>\n        }\n    }\n\n}","import { JsonParser, JsonMessage } from \"./jsonParser\";\nimport { connectionDataFromJson, ConnectionData } from \"./dataTypes\"\n\n/**\n * sets sessionStorage 'connection' to a json representation of ConnectionData\n */\nexport class Connection {\n\n    private ws: WebSocket | null;\n\n    private failedAttempts: number;\n\n    private verifiedConnection: boolean; // Hi - Hello echo verifies connection\n\n    private data: ConnectionData;\n\n    private onWebSockFailure: (ev: Event) => void;\n    private onWebSockOpen: (ev: Event) => void;\n\n    private jsonMessageHandler: (obj: MessageEvent) => void;\n\n    private connectedOnce: boolean;\n\n    constructor(data: ConnectionData, onWebSockFailure: (ev: Event) => void, onWebSockOpen: (ev: Event) => void) {\n        if (data.port.toString() == 'NaN') {\n            throw Error(\"yeet the port\"); \n        }\n        \n        this.data = {\n            host: encodeURIComponent(data.host),\n            name: encodeURIComponent(data.name),\n            color: encodeURIComponent(data.color),\n            port: data.port,\n            token: (data.token) ? data.token : null\n        }\n        \n        this.onWebSockFailure = onWebSockFailure;\n        this.onWebSockOpen = onWebSockOpen;\n\n        this.connectedOnce = false;\n        this.failedAttempts = 0;\n\n        this.verifiedConnection = false;\n\n        this.jsonMessageHandler = (a: any) => { throw Error(\"jsonMessageHandler not set\"); };\n        this.ws = null;\n\n        this.sendMessage = this.sendMessage.bind(this);\n        \n        this.connect();\n    }\n\n    /**\n     * \n     * @param onWebSockFailure a callback for handling errors\n     * @param onWebSockOpen a callback for handling a successful connection\n     * \n     * @returns a Connection object if connection data is found in sessionStorage, else null\n     */\n    static regainOldConnectionIfExists(onWebSockFailure: (ev: Event) => void, onWebSockOpen: (ev: Event) => void): Connection | null {\n        const result = sessionStorage.getItem('connection');\n        if (result) {\n            const dat = connectionDataFromJson(JSON.parse(result)); // json parsing shouldn't fail\n            return new Connection(dat, onWebSockFailure, onWebSockOpen);\n        }\n        else {\n            return null;\n        }\n    }\n\n    getName() {\n        return this.data.name;\n    }\n\n    private getUrl() {\n        if (this.data.token != null) {\n            return `ws://${this.data.host}:${this.data.port}/${this.data.name}/${this.data.token}/${this.data.color}`\n        }\n        else {\n            return `ws://${this.data.host}:${this.data.port}/${this.data.name}/${this.data.color}`\n        }    \n    }\n\n    private connect() {\n        this.ws = new WebSocket(this.getUrl());\n\n        this.ws.onerror = this.onerror.bind(this);\n        this.ws.onclose = this.onclose.bind(this);\n        this.ws.onmessage = this.onmessage.bind(this);\n        this.ws.onopen = this.onopen.bind(this);\n\n        this.verifiedConnection = false;\n    }\n\n    private onclose(ev: CloseEvent) {\n        console.log(\"WS closed\", ev);\n        this.verifiedConnection = false;\n        \n        if (ev.code >= 4000 && ev.code < 4100) {\n            // my error codes\n            console.log(\"Connection failed due to:\", ev.reason);\n            this.onWebSockFailure(ev);\n        }\n        else if (this.connectedOnce) {\n            if (this.failedAttempts > 5) {\n                return;\n            }\n\n            setTimeout(() => {\n                //newNotification('Reconnecting...');\n                this.connect();\n            }, 3000);\n        }\n    }\n\n    private onerror(ev: Event) {\n        console.log(\"WS errored\", ev);\n        this.verifiedConnection = false;\n\n        this.failedAttempts += 1\n        if (!this.connectedOnce) {\n            this.onWebSockFailure(ev);\n        }\n    }\n\n    private onmessage(ev: MessageEvent) {\n        if (ev.data == \"Hello\") {\n            console.log(\"Successful Echo, Server is alive!\");\n            this.verifiedConnection = true;\n        }\n        else {\n            try {\n                const obj = JSON.parse(ev.data);\n\n                //console.log(\"got msg:\", obj);\n\n                if ('token' in obj) {\n                    const token: string = JsonParser.requireString(obj, 'token');\n                    if (!this.data.token) {\n                        // remember the token\n                        console.log('Got token', token);\n                        this.data.token = token;\n\n                        sessionStorage.setItem('connection', JSON.stringify(this.data));\n                    }\n                    return;\n                }\n\n                this.jsonMessageHandler(obj);\n\n            } catch (e) {\n                if (e.name == 'SyntaxError') {\n                    console.log('Got invalid JSON')\n                }\n                else {\n                    console.log('Error:', e);\n                    console.log('Error data:', e.data);\n                    throw(e);\n                }\n            }\n        }\n    }\n\n    private onopen(ev: Event) {\n        console.log(\"WS opened\", ev);\n        this.failedAttempts = 0;\n        this.onWebSockOpen(ev);\n        this.connectedOnce = true;\n\n        if (this.ws) {\n            this.ws.send('Hi');\n            this.ws.send('history');\n        }\n        else {\n            throw Error('this shouldn\\'t happen');\n        }\n    }\n\n    public setJsonMessageHandler(f:(ev: MessageEvent) => void) {\n        this.jsonMessageHandler = f;\n    }\n\n    /**\n     * The function handles the JSON.stringify\n     * \n     * @param o An object to send.\n     */\n    public send(o: object) {\n        const msg = JSON.stringify(o);\n        if (this.ws) {\n            this.ws.send(msg);\n        }\n        else {\n            console.log('Disconnected');\n        }\n    }\n\n    /**\n     * For sending a message to the server\n     * \n     * @param type\n     * @param content \n     * @param args \n     */\n    public sendMessage(type: string, content: string, args?: Array<any>) {\n        this.send(JsonMessage(type, content, args));\n    }\n\n    public getHistory() {\n        if (this.ws) {\n            this.ws.send('history');\n        }\n        else {\n            console.log('Disconnected');\n        }\n    }\n}","import { JsonParser } from \"./jsonParser\";\n\nexport interface ConnectionData {\n    name: string,\n    host: string,\n    port: number,\n    token: string | null,\n    color: string\n}\n\nexport function connectionDataFromJson(o: object): ConnectionData {\n    return {\n        name: JsonParser.requireString(o, 'name'),\n        host: JsonParser.requireString(o, 'host'),\n        port: JsonParser.requireNumber(o, 'port'),\n        token: JsonParser.requireString(o, 'token'),\n        color: JsonParser.requireString(o, 'color')\n    }\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { UI } from \"./components/ui\";\n\nReactDOM.render(\n    <UI />,\n    document.getElementById(\"root\")\n);","\nexport function JsonMessage(type: string, content: string, args?: Array<any>) {\n    if (args && args.length > 0) {\n        return { \"type\": type, \"content\": content, \"args\": args }\n    }\n    else {\n        return { \"type\": type, \"content\": content }\n    }\n    \n}\n\n\nexport class JsonParserError extends Error {\n    // from https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html\n    constructor(message?: string) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n\n\nexport class JsonParser {\n    /**\n     * Check the __name__ tag of the serialized object\n     * \n     * @param o The result of JSON.parse \n     * @returns String which is the name of the serialized object, or \"\" if there is no name\n     */\n    static askName(o: any): string {\n        if (!('__name__' in o)) {\n            //throw new JsonParserError(\"Missing json field: '__name__'\");\n            return '';\n        }\n        const value: any = o['__name__'];\n        if (typeof(value) != 'string') {\n            throw new JsonParserError(\"Json field '__name__' is of the wrong type: got '\" + typeof(value) + \"' but expected 'string'\");\n        }\n        \n        return value;\n    }\n\n    static askType(o: any): string {\n        if (!('type' in o)) {\n            return '';\n        }\n        const value: any = o['type'];\n        if (typeof(value) != 'string') {\n            throw new JsonParserError(\"Json field 'type' is of the wrong type: got '\" + typeof(value) + \"' but expected 'string'\");\n        }\n        \n        return value;\n    }\n\n    static requireAny(o: any, name: string): any {\n        if (!(name in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        return o[name];\n    }\n\n    static requireName(o: any, nameRequired: string) {\n        if (!('__name__' in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        const value: any = o['__name__'];\n        if (typeof(value) != 'string') {\n            throw new JsonParserError(\"Json field '__name__' is of the wrong type: got '\" + typeof(value) + \"' but expected 'string'\");\n        }\n        \n        if (value != nameRequired) {\n            throw new JsonParserError(\"Json has incorrect object name, got '\" + value + \"' but expected '\" + nameRequired + \"'\")\n        }\n    }\n\n    static requireNumber(o: any, name: string): number {\n        if (!(name in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        const value: any = o[name];\n        if (typeof(value) != 'number') {\n            throw new JsonParserError(\"Json field '\" + name + \"' is of the wrong type: got '\" + typeof(value) + \"' but expected 'number'\");\n        }\n        return value;\n    }\n    \n    static requireString(o: any, name: string): string {\n        if (!(name in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        const value: any = o[name];\n        if (typeof(value) != 'string') {\n            throw new JsonParserError(\"Json field '\" + name + \"' is of the wrong type: got '\" + typeof(value) + \"' but expected 'string'\");\n        }\n        return value;\n    }\n\n    static requireObject(o: any, name: string): object {\n        if (!(name in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        const value: any = o[name];\n        if (typeof(value) != 'object') {\n            throw new JsonParserError(\"Json field '\" + name + \"' is of the wrong type: got '\" + typeof(value) + \"' but expected 'object'\");\n        }\n        return value;\n    }\n\n    static requireArray(o: any, name: string): Array<any> {\n        if (!(name in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        const value: any = o[name];\n        if (typeof(value) != 'object' || value.__proto__.constructor.name != 'Array') {\n            throw new JsonParserError(\"Json field '\" + name + \"' is of the wrong type: got '\" + typeof(value) + \"' but expected 'Array'\");\n        }\n        return value;\n    }\n\n    static requireBool(o: any, name: string): boolean {\n        if (!(name in o)) {\n            throw new JsonParserError(\"Missing json field: '\" + name + \"'\");\n        }\n        const value: any = o[name];\n        if (typeof(value) != 'boolean') {\n            throw new JsonParserError(\"Json field '\" + name + \"' is of the wrong type: got '\" + typeof(value) + \"' but expected 'boolean'\");\n        }\n        return value;\n    }\n\n}","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}